name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Unity Project
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true
    
    - name: Cache Unity Library
      uses: actions/cache@v3
      with:
        path: Library
        key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
        restore-keys: |
          Library-
    
    - name: Run Unity Tests
      uses: game-ci/unity-test-runner@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        projectPath: .
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        
  build:
    name: Build Unity Project
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
          - StandaloneOSX
          - WebGL
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true
    
    - name: Cache Unity Library
      uses: actions/cache@v3
      with:
        path: Library
        key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
        restore-keys: |
          Library-${{ matrix.targetPlatform }}-
          Library-
    
    - name: Build Unity Project
      uses: game-ci/unity-builder@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        projectPath: .
        targetPlatform: ${{ matrix.targetPlatform }}
        buildName: SurvivorLite
        buildsPath: build
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: SurvivorLite-${{ matrix.targetPlatform }}
        path: build/${{ matrix.targetPlatform }}
        retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[release]')
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Download All Artifacts
      uses: actions/download-artifact@v3
      with:
        path: builds
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: SurvivorLite v${{ github.run_number }}
        body: |
          ## üéÆ SurvivorLite Release v${{ github.run_number }}
          
          ### What's New
          - Automated build from commit: ${{ github.event.head_commit.message }}
          
          ### Downloads
          - **Windows**: SurvivorLite-StandaloneWindows64.zip
          - **macOS**: SurvivorLite-StandaloneOSX.zip  
          - **WebGL**: SurvivorLite-WebGL.zip
          
          ### How to Play
          1. Download the appropriate version for your platform
          2. Extract the archive
          3. Run the executable
          4. Use WASD to move, ESC to pause
          
          Enjoy the vampire survival action! üßõ‚Äç‚ôÇÔ∏è‚öîÔ∏è
        files: |
          builds/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}